###############################################################################
## Main BJam makefile for TuttleOFX Plugins
###############################################################################
import type ;

path-constant DIST : $(DIST)/plugins ;

###############################################################################
# Registering plugin files as shared library
# Plugins will be *.ofx files under windows and linux
###############################################################################
if ! [ type.registered PLUGIN ] 
{
	type.register PLUGIN : : SHARED_LIB ;
	type.set-generated-target-suffix PLUGIN : : ofx ;
	type.set-generated-target-prefix PLUGIN :  : "" ;
}

###############################################################################
# Global project requirements
###############################################################################
project
    : requirements
        <include>$(3RD_PARTY)/boostHack
    ;        
        
###############################################################################
# Automatic Install for plugins
###############################################################################
rule auto_install ( target : path )
{
    install install_plugin_$(target) : $(target) :
    	<target-os>windows:<location>$(path)/$(target)/bundle/$(target).ofx.bundle/Contents/Win32
		<target-os>linux:<location>$(path)/$(target)/bundle/$(target).ofx.bundle/Contents/Linux-x86
		<target-os>linux,<address-model>64:<location>$(path)/$(target)/bundle/$(target).ofx.bundle/Contents/Linux-x86-64
		<target-os>darwin:<location>$(path)/$(target)/bundle/$(target).ofx.bundle/Contents/MacOS
		<install-dependencies>on
		<install-type>PLUGIN
	;
}

###############################################################################
# Common dependencies
###############################################################################
use-project /tuttlelib : ../libraries/tuttle ;

###############################################################################
# Build all plugins
###############################################################################
for local l in [ glob * : _* param private ]
{
   build-project $(l) ;
}
